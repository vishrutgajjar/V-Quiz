package com.example.vishrut.vv;

/**
 * Created by ViShRuT on 9/21/2016.
 */


/**
 * Created by ViShRuT on 9/10/2016.
 */
        import java.util.ArrayList;
        import java.util.List;

        import java.util.Random;
        import java.util.Timer;

import android.widget.Toast;
import java.util.LinkedList;

        import java.util.Collections;
        import java.util.Collection;
        import java.util.concurrent.TimeUnit;

        import android.annotation.SuppressLint;

        import android.annotation.TargetApi;

        import android.app.Activity;

        import android.content.Intent;

        import android.graphics.Typeface;

        import android.media.MediaPlayer;

        import android.os.Build;

        import android.os.Bundle;

        import android.os.CountDownTimer;

        import android.util.Log;

        import android.view.View;

        import android.widget.Button;

        import android.widget.TextView;



public class QuestionActivity extends Activity {

    List<Question> quesList;
    //List<Question> list ;
    int score = 0,count=5;
   // Random r2=new Random();
    int qid =0;


    CounterClass timer = new CounterClass(60000, 1000);
    Question currentQ;

    TextView txtQuestion, times, scored;

    Button button1, button2, button3,button4;



    @SuppressLint("SetTextI18n")
    @Override

    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_main);


        QuizHelper db = new QuizHelper(this);  // my question bank class

        quesList = db.getAllQuestions();  // this will fetch all quetonall questions

       // List<String> list2 = list1.stream().collect(Collectors.toList());
        //Collections.copy(list, quesList);



        Collections.shuffle(quesList);


        currentQ = quesList.get(qid);// the current question

           // currentQ = quesList.get(qid);
        txtQuestion = (TextView) findViewById(R.id.txtQuestion);

        // the textview in which the question will be displayed


        // the three buttons,

        // the idea is to set the text of three buttons with the options from question bank

        button1 = (Button) findViewById(R.id.button1);

        button2 = (Button) findViewById(R.id.button2);

        button3 = (Button) findViewById(R.id.button3);
        button4 = (Button) findViewById(R.id.button4);


        // the textview in which score will be displayed

        scored = (TextView) findViewById(R.id.score);


        // the timer

        times = (TextView) findViewById(R.id.timers);


        // method which will set the things up for our game

        setQuestionView();

        times.setText("00:02:00");


        // A timer of 60 seconds to play for, with an interval of 1 second (1000 milliseconds)

       // CounterClass timer = new CounterClass(30000, 1000);

        timer.start();


        // button click listeners

        button1.setOnClickListener(new View.OnClickListener() {

            @Override

            public void onClick(View v) {


                // passing the button text to other method

                // to check whether the anser is correct or not

                // same for all three buttons

                getAnswer(button1.getText().toString());

            }

        });


        button2.setOnClickListener(new View.OnClickListener() {
            @Override

            public void onClick(View v) {

                getAnswer(button2.getText().toString());

            }

        });


        button3.setOnClickListener(new View.OnClickListener() {

            @Override

            public void onClick(View v) {
                getAnswer(button3.getText().toString());

            }

        });
        button4.setOnClickListener(new View.OnClickListener() {
            @Override

            public void onClick(View v) {
                getAnswer(button4.getText().toString());
            }
        });
    }

    public void getAnswer(String AnswerString) {

        if (currentQ.getANSWER().equals(AnswerString)) {
            // if conditions matches increase the int (score) by 1

            // and set the text of the score view
            Toast.makeText(getBaseContext() ,"Correct",Toast.LENGTH_SHORT ).show();

            score++;

           // scored.setText("Score : " + score);

        }
        else {
            Toast.makeText(getBaseContext(), "Incorrect", Toast.LENGTH_SHORT).show();

       count--;
            scored.setText("Life : " + count);}
        /* else {



            // if unlucky start activity and finish the game

            Intent intent = new Intent(QuestionActivity.this,

                    ResultActivity.class);



            // passing the int value

            Bundle b = new Bundle();

            b.putInt("score", score); // Your score
            intent.putExtras(b); // Put your score to your next

            startActivity(intent);

            finish();

            score=0;
        }*/

        if (count > 0&& qid<21) {



            // if questions are not over then do this

            currentQ = quesList.get(qid);

            setQuestionView();

        } else {

            // if over do this

            Intent intent = new Intent(QuestionActivity.this,

                    ResultActivity.class);

            Bundle b = new Bundle();

            b.putInt("score", score); // Your score

            intent.putExtras(b); // Put your score to your next

            startActivity(intent);

            finish();
timer.cancel();

score=0;
            count=5;
        }




    }



    @TargetApi(Build.VERSION_CODES.GINGERBREAD)

    @SuppressLint("NewApi")

    public class CounterClass extends CountDownTimer {



        public CounterClass(long millisInFuture, long countDownInterval) {

            super(millisInFuture, countDownInterval);

            // TODO Auto-generated constructor stub

        }



        @Override

        public void onFinish() {

            times.setText("Time is up");

            Intent intent = new Intent(QuestionActivity.this,

                    ResultActivity.class);



            // passing the int value

            Bundle b = new Bundle();

            b.putInt("score", score); // Your score
            intent.putExtras(b); // Put your score to your next

            startActivity(intent);

            finish();

        }



        @Override

        public void onTick(long millisUntilFinished) {

            // TODO Auto-generated method stub



            long millis = millisUntilFinished;

            String hms =String.format(

                    "%02d:%02d:%02d",

                    TimeUnit.MILLISECONDS.toHours(millis),

                    TimeUnit.MILLISECONDS.toMinutes(millis)

                            - TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS

                            .toHours(millis)),

                    TimeUnit.MILLISECONDS.toSeconds(millis)

                            - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS

                            .toMinutes(millis)));

            System.out.println(hms);

            times.setText(hms);

        }



    }



    private void setQuestionView() {



        // the method which will put all things together

        txtQuestion.setText(currentQ.getQUESTION());

        button1.setText(currentQ.getOPTA());

        button2.setText(currentQ.getOPTB());

        button3.setText(currentQ.getOPTC());
        button4.setText(currentQ.getOPTD());
      qid++;
        //   Random r1=new Random();
       // qid= r1.nextInt(20);


        // value= list.remove(0);
    }

    }



